[2023-02-15 16:08:11,623] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: trigger_airbyte_dbt_job.airbyte_epidemiology 2023-02-15T16:05:11.489879+00:00 [queued]>
[2023-02-15 16:08:11,638] {taskinstance.py:896} INFO - Dependencies all met for <TaskInstance: trigger_airbyte_dbt_job.airbyte_epidemiology 2023-02-15T16:05:11.489879+00:00 [queued]>
[2023-02-15 16:08:11,638] {taskinstance.py:1087} INFO - 
--------------------------------------------------------------------------------
[2023-02-15 16:08:11,638] {taskinstance.py:1088} INFO - Starting attempt 1 of 1
[2023-02-15 16:08:11,638] {taskinstance.py:1089} INFO - 
--------------------------------------------------------------------------------
[2023-02-15 16:08:11,646] {taskinstance.py:1107} INFO - Executing <Task(AirbyteTriggerSyncOperator): airbyte_epidemiology> on 2023-02-15T16:05:11.489879+00:00
[2023-02-15 16:08:11,654] {standard_task_runner.py:76} INFO - Running: ['***', 'tasks', 'run', 'trigger_airbyte_dbt_job', 'airbyte_epidemiology', '2023-02-15T16:05:11.489879+00:00', '--job-id', '25', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/dag_airbyte_dbt.py', '--cfg-path', '/tmp/tmpx0ny2omp', '--error-file', '/tmp/tmp8mm7wztj']
[2023-02-15 16:08:11,654] {standard_task_runner.py:77} INFO - Job 25: Subtask airbyte_epidemiology
[2023-02-15 16:08:11,651] {standard_task_runner.py:52} INFO - Started process 695 to run task
[2023-02-15 16:08:11,710] {logging_mixin.py:104} INFO - Running <TaskInstance: trigger_airbyte_dbt_job.airbyte_epidemiology 2023-02-15T16:05:11.489879+00:00 [running]> on host 94d7678361e3
[2023-02-15 16:08:11,777] {taskinstance.py:1302} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=trigger_airbyte_dbt_job
AIRFLOW_CTX_TASK_ID=airbyte_epidemiology
AIRFLOW_CTX_EXECUTION_DATE=2023-02-15T16:05:11.489879+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-02-15T16:05:11.489879+00:00
[2023-02-15 16:08:11,786] {base.py:78} INFO - Using connection to: id: airbyte_example. Host: airbyte-proxy, Port: 8000, Schema: , Login: , Password: None, extra: {}
[2023-02-15 16:08:11,788] {http.py:140} INFO - Sending 'POST' to url: http://airbyte-proxy:8000/api/v1/connections/sync
[2023-02-15 16:08:11,891] {http.py:154} ERROR - HTTP error: Conflict
[2023-02-15 16:08:11,891] {http.py:155} ERROR - {"message":"A sync is already running for: 26f2f420-b502-48e2-a80d-f1d8636ee9ae","exceptionClassName":"io.airbyte.commons.server.errors.ValueConflictKnownException","exceptionStack":["io.airbyte.commons.server.errors.ValueConflictKnownException: A sync is already running for: 26f2f420-b502-48e2-a80d-f1d8636ee9ae","\tat io.airbyte.commons.server.handlers.SchedulerHandler.readJobFromResult(SchedulerHandler.java:498)","\tat io.airbyte.commons.server.handlers.SchedulerHandler.submitManualSyncToWorker(SchedulerHandler.java:483)","\tat io.airbyte.commons.server.handlers.SchedulerHandler.syncConnection(SchedulerHandler.java:380)","\tat io.airbyte.server.apis.ConnectionApiController.lambda$syncConnection$7(ConnectionApiController.java:108)","\tat io.airbyte.server.apis.ApiHelper.execute(ApiHelper.java:18)","\tat io.airbyte.server.apis.ConnectionApiController.syncConnection(ConnectionApiController.java:108)","\tat io.airbyte.server.apis.$ConnectionApiController$Definition$Exec.dispatch(Unknown Source)","\tat io.micronaut.context.AbstractExecutableMethodsDefinition$DispatchedExecutableMethod.invoke(AbstractExecutableMethodsDefinition.java:378)","\tat io.micronaut.context.DefaultBeanContext$4.invoke(DefaultBeanContext.java:594)","\tat io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:303)","\tat io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:111)","\tat io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:103)","\tat io.micronaut.http.server.RouteExecutor.lambda$executeRoute$14(RouteExecutor.java:659)","\tat reactor.core.publisher.FluxDeferContextual.subscribe(FluxDeferContextual.java:49)","\tat reactor.core.publisher.Flux.subscribe(Flux.java:8660)","\tat reactor.core.publisher.FluxFlatMap$FlatMapMain.onNext(FluxFlatMap.java:426)","\tat io.micronaut.reactive.reactor.instrument.ReactorSubscriber.onNext(ReactorSubscriber.java:57)","\tat reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:172)","\tat io.micronaut.http.server.netty.RoutingInBoundHandler$4.doOnComplete(RoutingInBoundHandler.java:965)","\tat io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)","\tat io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:136)","\tat io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)","\tat java.base/java.util.Optional.ifPresent(Optional.java:178)","\tat io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:48)","\tat io.micronaut.jackson.core.parser.JacksonCoreProcessor.doOnComplete(JacksonCoreProcessor.java:94)","\tat io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)","\tat io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:161)","\tat io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:79)","\tat io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:383)","\tat io.micronaut.http.netty.reactive.HandlerPublisher.flushBuffer(HandlerPublisher.java:470)","\tat io.micronaut.http.netty.reactive.HandlerPublisher.publishMessageLater(HandlerPublisher.java:360)","\tat io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:423)","\tat io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:418)","\tat io.netty.channel.AbstractChannelHandlerContext.callHandlerRemoved(AbstractChannelHandlerContext.java:1122)","\tat io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:637)","\tat io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:477)","\tat io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:423)","\tat io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:483)","\tat io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:319)","\tat io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:282)","\tat io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:134)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)","\tat io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:99)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)","\tat io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)","\tat io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)","\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)","\tat io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:200)","\tat io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:139)","\tat io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:837)","\tat io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:814)","\tat io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:165)","\tat io.micronaut.http.netty.stream.HttpStreamsHandler$2.requestDemand(HttpStreamsHandler.java:273)","\tat io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.receivedDemand(HandlerPublisher.java:556)","\tat io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:494)","\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)","\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)","\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)","\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)","\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)","\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)","\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)","\tat java.base/java.lang.Thread.run(Thread.java:1589)"]}
[2023-02-15 16:08:11,906] {taskinstance.py:1501} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/providers/http/hooks/http.py", line 152, in check_response
    response.raise_for_status()
  File "/home/airflow/.local/lib/python3.6/site-packages/requests/models.py", line 943, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 409 Client Error: Conflict for url: http://airbyte-proxy:8000/api/v1/connections/sync

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1157, in _run_raw_task
    self._prepare_and_execute_task_with_callbacks(context, task)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1331, in _prepare_and_execute_task_with_callbacks
    result = self._execute_task(context, task_copy)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/models/taskinstance.py", line 1361, in _execute_task
    result = task_copy.execute(context=context)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/providers/airbyte/operators/airbyte.py", line 71, in execute
    job_object = hook.submit_sync_connection(connection_id=self.connection_id)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/providers/airbyte/hooks/airbyte.py", line 95, in submit_sync_connection
    headers={"accept": "application/json"},
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/providers/http/hooks/http.py", line 141, in run
    return self.run_and_check(session, prepped_request, extra_options)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/providers/http/hooks/http.py", line 198, in run_and_check
    self.check_response(response)
  File "/home/airflow/.local/lib/python3.6/site-packages/airflow/providers/http/hooks/http.py", line 156, in check_response
    raise AirflowException(str(response.status_code) + ":" + response.reason)
airflow.exceptions.AirflowException: 409:Conflict
[2023-02-15 16:08:11,909] {taskinstance.py:1551} INFO - Marking task as FAILED. dag_id=trigger_airbyte_dbt_job, task_id=airbyte_epidemiology, execution_date=20230215T160511, start_date=20230215T160811, end_date=20230215T160811
[2023-02-15 16:08:11,949] {local_task_job.py:151} INFO - Task exited with return code 1
